{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","_slicedToArray","Name","setName","_useState3","_useState4","chosen","setchosen","_useState5","name","species","img","hp","attack","defence","type","_useState6","pokemon","setpokemon","React","createElement","className","onChange","event","target","value","onClick","Axios","get","concat","then","res","data","sprites","front_default","stats","base_stat","types","Fragment","src","alt","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"iPA4EeA,MAxEf,WAEE,IAAAC,EAAsBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA5BI,EAAIF,EAAA,GAACG,EAAOH,EAAA,GAClBI,EAA0BL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAnCE,EAAMD,EAAA,GAACE,EAASF,EAAA,GACtBG,EAA4BT,mBAAS,CAEnCU,KAAM,GACDC,QAAS,GACTC,IAAK,GACLC,GAAI,GACJC,OAAQ,GACRC,QAAQ,GACTC,KAAM,KACVC,EAAAf,YAAAO,EAAA,GATIS,EAAOD,EAAA,GAACE,EAAUF,EAAA,GA4BxB,OACEG,IAAAC,cAAA,OAAKC,UAAU,OACZF,IAAAC,cAAA,OAAKC,UAAU,SAChBF,IAAAC,cAAA,UAAI,YAEND,IAAAC,cAAA,SAAOL,KAAK,OAAOO,SAAU,SAACC,GAC5BpB,EAAQoB,EAAMC,OAAOC,UAEvBN,IAAAC,cAAA,UAAQM,QAzBK,WACbC,IAAMC,IAAG,qCAAAC,OAAsC3B,IAAQ4B,KAAK,SAACC,GAG3Db,EAAW,CAACT,KAAMP,EACfQ,QAASqB,EAAIC,KAAKtB,QAAQD,KAC1BE,IAAKoB,EAAIC,KAAKC,QAAQC,cACtBtB,GAAImB,EAAIC,KAAKG,MAAM,GAAGC,UACtBvB,OAAQkB,EAAIC,KAAKG,MAAM,GAAGC,UAC1BtB,QAASiB,EAAIC,KAAKG,MAAM,GAAGC,UAC5BrB,KAAMgB,EAAIC,KAAKK,MAAM,GAAGtB,KAAKN,SAIjCF,GAAU,KAWe,WAMzBY,IAAAC,cAAA,OAAKC,UAAU,WAEZf,EAEDa,IAAAC,cAAAD,IAAAmB,SAAA,KAEEnB,IAAAC,cAAA,UAAKH,EAAQR,MACbU,IAAAC,cAAA,OAAKmB,IAAMtB,EAAQN,IAAK6B,IAAI,WAC5BrB,IAAAC,cAAA,UAAI,UAAQH,EAAQF,MACpBI,IAAAC,cAAA,UAAI,QAAMH,EAAQL,IAClBO,IAAAC,cAAA,UAAI,YAAUH,EAAQJ,QACtBM,IAAAC,cAAA,UAAI,aAAWH,EAAQH,UAMvBK,IAAAC,cAAA,UAAI,kCCvDGqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAf,KAAAc,EAAAE,KAAA,UAAqBhB,KAAK,SAAAiB,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtC,IAAAC,cAACD,IAAMuC,WAAU,KACfvC,IAAAC,cAACvB,EAAG,QAOR4C","file":"static/js/main.f9c5ae98.chunk.js","sourcesContent":["import React from \"react\";\nimport './App.css';\nimport { useState } from 'react';\nimport Axios from \"axios\";\nfunction App() {\n\n  const[Name,setName] = useState(\"\");\n  const[chosen,setchosen] = useState(false);\n  const[pokemon,setpokemon] = useState({\n\n    name: \"\",\n         species: \"\", \n         img: \"\", \n         hp: \"\",\n         attack: \"\",\n         defence:\"\",\n        type: \"\"\n  });\n\n  const search = () =>{\n    Axios.get(`https://pokeapi.co/api/v2/pokemon/${Name}`).then((res)=>{\n\n\n      setpokemon({name: Name,\n         species: res.data.species.name, \n         img: res.data.sprites.front_default, \n         hp: res.data.stats[0].base_stat,\n         attack: res.data.stats[1].base_stat,\n         defence: res.data.stats[2].base_stat,\n        type: res.data.types[0].type.name})\n    }\n    );\n\n    setchosen(true);\n  }\n\n  return (\n    <div className=\"App\">\n       <div className=\"title\">\n      <h1>POKEMON </h1>\n\n    <input type=\"text\" onChange={(event)=>{\n      setName(event.target.value);\n    }}/>\n    <button onClick={search}>Search</button>\n\n      </div>\n\n    \n\n    <div className='Display'>\n\n      {chosen ? \n      \n      <>\n       \n        <h1>{pokemon.name}</h1>\n        <img src ={pokemon.img} alt=\"no img\"/>\n        <h4>TYPE : {pokemon.type}</h4>\n        <h4>HP : {pokemon.hp}</h4>\n        <h4>ATTACK : {pokemon.attack}</h4>\n        <h4>DEFENCE : {pokemon.defence}</h4>\n        </>\n      \n       \n      \n      \n      : <h1>ENTER THE NAME OF A POKEMON</h1>}\n    </div>\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}